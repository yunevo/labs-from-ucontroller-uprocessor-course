;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Mon May 9 2022
; Processor: AT89C51
; Compiler:  ASEM-51 (Proteus)
;====================================================================

$NOMOD51
$INCLUDE (8051.MCU)

;====================================================================
; DEFINITIONS
COUNT EQU 064h
;====================================================================

;====================================================================
; VARIABLES
;====================================================================

;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================

      ; Reset Vector

      org   0000h
      jmp   setUp
      
      org   0003h
      jmp   interrupt0
      
      org   0013h
      jmp   interrupt1

;====================================================================
; CODE SEGMENT
;====================================================================

      org   0100h
setUp:	
      ; Write your code here
     MOV R0, #000h
     MOV R1, #000h
     MOV R2, #000h
     MOV R3, #000h
     MOV R4, #000h
     MOV R5, #002h
     MOV TCON, #00010101b
     MOV IE, #10000101b
     MOV TMOD, #00010010b
     MOV TH0, #070h
     MOV TL0, #070h
     
loop:	
      ACALL check
      ACALL checkButtonD
     
      ;BÙ CHO 50MS ÐÃ DELAY ? CHECK BUTTON D B?T ÐU?C TÍN HI?U
      JNB TR0, scanLedLoop
      MOV A, R4
      ADD A, #064h
      MOV R4, A
      ACALL check
      MOV A, R4
      ADD A, #064h
      MOV R4, A
      ACALL check
      MOV A, R4
      ADD A, #064h
      MOV R4, A
      ACALL check
      MOV A, R4
      ADD A, #064h
      MOV R4, A
      ACALL check
      MOV A, R4
      ADD A, #064h
      MOV R4, A
      ACALL check
scanLedLoop:
      ACALL scanLed
      
      
      
      
      jmp Loop

;====================================================================

scanLed:
      MOV P2, R0
      SETB P2.4
      ACALL delay1ms
      CLR P2.4
      
      MOV P2, R1
      SETB P2.5
      CLR P3.4
      ACALL delay1ms
      CLR P2.5
      SETB P3.4
      
      MOV P2, R2
      SETB P2.6
      ACALL delay1ms
      CLR P2.6
      
      MOV P2, R3
      SETB P2.7
      ACALL delay1ms
      CLR P2.7
      RET
;====================================================================

check:
      JB TF0, checkCOUNT
      RET
checkCOUNT:
      CLR TF0
      INC R4
      CJNE R4, #064h, checkCOUNTLabel
checkCOUNTLabel:
      JNC check0_01
      RET

check0_01:
      MOV A, R4
      SUBB A, COUNT
      MOV R4, A
      INC R3
      CJNE R3, #00Ah, check0_01Label
check0_01Label:
      JNC check0_1
      RET
      
check0_1:
      MOV R3, #000H
      INC R2
      CJNE R2, #00Ah, check0_1Label
check0_1Label:
      JNC check1
      RET
      
check1:
      MOV R2, #000H
      INC R1
      CJNE R1, #00Ah, check1Label
check1Label:
      JNC check10
      RET      
      
check10:
      MOV R1, #000h
      INC R0
      CJNE R0, #00Ah, check10Label
check10Label:
      JNC resetR0
      RET
resetR0: 
      MOV R0, #000h
return:
      RET

;============================================================	 
delay1ms:
      MOV R7, #00Ah
againDelay1ms: 
      ACALL delay100us
      DJNZ R7, againDelay1ms
      RET
      
;============================================================
delay100us:
      MOV R6, #064h
againDelay100us: 
      DJNZ R6, againDelay100us
      RET

;============================================================
delay50ms:
      MOV TH1, #03Ch
      MOV TH0, #040h
      CLR TF1
      SETB TR1
againDelay50ms: 
      JNB TF1, againDelay50ms
      CLR TF1
      CLR TR1
      RET
;============================================================
interrupt0:
      CPL TR0
      RETI
      
;============================================================
checkButtonD:
      MOV A, P3
      ANL A, #00000010b
      CJNE A, 05h, notEqualCheckButtonD
      RET
notEqualCheckButtonD:
      ACALL delay50ms
      JB P3.1, setLastButton1
      ACALL buttonD
      MOV R5, #000h
      RET
setLastButton1:
      MOV R5, #002h
      RET
;============================================================
buttonD:
      CJNE R1, #0, decreaseR1
      CJNE R0, #0, decreaseR0
      MOV R0, #009h
      MOV R1, #009h
      RET
decreaseR0:
      DEC R0
      MOV R1, #09h
      RET
decreaseR1:
      DEC R1
      RET

;============================================================
interrupt1:
      CJNE R1, #009h, increaseR1
      CJNE R0, #009h, increaseR0
      MOV  R0, #000h
      MOV R1, #000h
      RETI
increaseR0:
      INC R0
      MOV R1, #000h
      RETI
increaseR1:
      INC R1
      RETI
      END